/*! For license information please see f68e378a.359f76b1.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{162:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return O}));var n=a(2),r=a(9),i=(a(0),a(169)),l=a(184),c=a(180),b=a(171),o={title:"Satellite"},s={id:"satellite",title:"Satellite",description:"About",source:"@site/docs/satellite.md",permalink:"/docs/docs/satellite",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/satellite.md",sidebar:"docs",previous:{title:"Authentication",permalink:"/docs/docs/auth"},next:{title:"Operations Service",permalink:"/docs/docs/operations"}},p=[{value:"About",id:"about",children:[]},{value:"Endpoints",id:"endpoints",children:[{value:"<code>GET /fields</code>",id:"get-fields",children:[]},{value:"<code>GET /fields/{id}</code>",id:"get-fieldsid",children:[]},{value:"<code>GET /fields/{id}/processes</code>",id:"get-fieldsidprocesses",children:[]},{value:"<code>POST /fields</code>",id:"post-fields",children:[]},{value:"<code>PUT /fields/{id}</code>",id:"put-fieldsid",children:[]},{value:"<code>DELETE /fields/{id}</code>",id:"delete-fieldsid",children:[]}]}],d={rightToc:p};function O(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"about"},"About"),Object(i.b)("p",null,"Our API returns processed, cropped, and color-corrected RGB and NDVI images."),Object(i.b)("img",{alt:"Field example",src:Object(b.a)("img/fieldovertime.png")}),Object(i.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"https://a.agrigate.io/services/satellite/api\n")),Object(i.b)("p",null,"This service has the following endpoints available:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"GET    /fields\nGET    /fields/{id}\nGET    /fields/{id}/processes\nPOST   /fields\nPUT    /fields/{id}\nDELETE /fields/{id}\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"endpoints"},"Endpoints"),Object(i.b)("h3",{id:"get-fields"},Object(i.b)("inlineCode",{parentName:"h3"},"GET /fields")),Object(i.b)("p",null,"Returns paged results for all fields registered."),Object(i.b)("p",null,"It returns a list of JSON objects like so:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'[\n    {\n        "externalId": "your field id",\n        "geometry": {\n            "type": "MultiPolygon",\n            "coordinates": [...]\n        }\n    },\n    # etc...\n]\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"externalId"),": external ID used in the field's registration"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"geometry"),": a valid ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7"}),"MultiPolygon")," GeoJSON object with the geometry of the\nfield")),Object(i.b)(l.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Bash",value:"sh"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://a.agrigate.io/services/satellite/api/fields'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(c.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://a.agrigate.io/services/satellite/api/fields'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://a.agrigate.io/services/satellite/api/fields'\n")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"get-fieldsid"},Object(i.b)("inlineCode",{parentName:"h3"},"GET /fields/{id}")),Object(i.b)("p",null,"Fetches a field entry based on its external id."),Object(i.b)("p",null,"It returns a single JSON object with the following entries (like each item from\n",Object(i.b)("inlineCode",{parentName:"p"},"GET /fields")," results):"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'{\n    "externalId": "your field id",\n    "geometry": {\n        "type": "MultiPolygon",\n        "coordinates": [...]\n    }\n}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"id"),": external ID used in the field's registration"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"geometry"),": a valid ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7"}),"MultiPolygon")," GeoJSON object with the geometry of the\nfield")),Object(i.b)(l.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Bash",value:"sh"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://a.agrigate.io/services/satellite/api/fields/YOUR_ID'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(c.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://a.agrigate.io/services/satellite/api/fields/YOUR_ID'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://a.agrigate.io/services/satellite/api/fields/YOUR_ID'\n")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"get-fieldsidprocesses"},Object(i.b)("inlineCode",{parentName:"h3"},"GET /fields/{id}/processes")),Object(i.b)("p",null,"Returns all processes already handled by our service."),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"process")," is created by our servers whenever there is a new satellite image\nthat intersects with one of your registered fields. This endpoint is used to\naccess all images that each process generates."),Object(i.b)("p",null,"The returned payload is like so:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'[\n    {\n        "date": "2020-06-03T19:03:57.882Z",\n        "clouds": 0,\n        "bucketName": "sentinel-s2-l1c",\n        "bucketKey": "tiles/10/S/FH/2020/6/3/0",\n        "bucketRegion": "eu-central-1",\n        "status": "SUCCESS",\n        "coverage": 100,\n        "images": [\n            {\n                "url": "url.to.your.image.tif",\n                "type": "tif",\n                "resolution": 20\n            },\n            # etc...\n        ]\n    },\n    # etc...\n]\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"date"),": the date of the satellite image"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"clouds"),": cloud coverage percentage of the field, from 0 to 100"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bucketName"),": name of Sentinel's bucket where the original tile is. Usually\n",Object(i.b)("inlineCode",{parentName:"li"},"sentinel-s2-l1c")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bucketRegion"),": AWS region of original image's bucket. Usually ",Object(i.b)("inlineCode",{parentName:"li"},"eu-central-1")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bucketKey"),": base path of original satellite image"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"status"),": status of the process. It will be either ",Object(i.b)("inlineCode",{parentName:"li"},"SUCCESS")," or ",Object(i.b)("inlineCode",{parentName:"li"},"FAILURE")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"coverage"),": data coverage percentage of the field, from 0 to 100"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"images"),": each image in this list will have the following data:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"url"),": URL of the image"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"type"),": the type of the image. One of ",Object(i.b)("inlineCode",{parentName:"li"},"tif"),", ",Object(i.b)("inlineCode",{parentName:"li"},"ndvi"),", ",Object(i.b)("inlineCode",{parentName:"li"},"png")," and\n",Object(i.b)("inlineCode",{parentName:"li"},"tif_colorized")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"resolution"),": resolution, in meters, of the image. See table below")))),Object(i.b)("p",null,"Usually, we generate a total of 17 images for each intersected field. A GeoTiff for each band from Sentinel; some utility images as well, RGB and NDVI. The following table shows all the images with its resolutions and types:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Resolution"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B01.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"60 meters"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B02.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B03.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B04.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B05.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"20"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B06.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"20"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B07.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"20"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B08.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B09.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"60"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B10.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"60"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B11.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"20"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"B12.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"20"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"NDVI.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"NULL"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"png")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"NDVI.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"ndvi")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"NDVI_color.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif_colorized")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"RGB.png"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"NULL"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"png")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"RGB.tif"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"tif_colorized")))),Object(i.b)("p",null,"PNG files do not have resolution because they are scaled up by 800%, so each pixel does not represent the correct size anymore."),Object(i.b)("p",null,"We generate a colorized ",Object(i.b)("inlineCode",{parentName:"p"},"NDVI_color.tif")," using a custom built color ramp. See\nthe image below. If you want to use your own ramp, we recommend using ",Object(i.b)("inlineCode",{parentName:"p"},"NDVI.tif"),",\nwhich is a pre calculated NDVI file. You can import it into any GIS software,\nlike ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.qgis.org/en/site/"}),"QGis"),", and use it as you please."),Object(i.b)("img",{alt:"NDVI example",src:Object(b.a)("img/ndviexample.png")}),Object(i.b)(l.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Bash",value:"sh"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://a.agrigate.io/services/satellite/api' +\n               '/fields/YOUR_ID/processes'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(c.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = ('https://a.agrigate.io/services/satellite/api'\n            '/fields/YOUR_ID/processes')\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -X GET \\\n    --header 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://a.agrigate.io/services/satellite/api/fields/YOUR_ID/processes'\n")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"post-fields"},Object(i.b)("inlineCode",{parentName:"h3"},"POST /fields")),Object(i.b)("p",null,"Creates a new field entry in the database."),Object(i.b)("p",null,"A field will start to be monitored as soon as it is added to our database. It\nwill be continuously monitored for as long as it is in there. If you want to\nstop this process, you should remove the field from the database entirely.\nUse a ",Object(i.b)("inlineCode",{parentName:"p"},"DELETE")," HTTP request."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Note that the field deletion cascades to all other tables. Meaning that all\nprocessed images will be lost."))),Object(i.b)("h4",{id:"payload"},"Payload"),Object(i.b)("p",null,"The payload of this object should be like the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'{\n    "externalId": "your field id",\n    "geometry": {\n        "type": "MultiPolygon",\n        "coordinates": [...]\n    }\n}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"externalId"),": external ID used in the field's registration"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"geometry"),": a valid ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7"}),"MultiPolygon")," GeoJSON object with the geometry of the\nfield")),Object(i.b)("p",null,"There are some limitations regarding the geometry of the field. It cannot be\nbigger than 50 million square meters and it cannot have a perimeter bigger\nthan ~28 thousand meters."),Object(i.b)(l.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Bash",value:"sh"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://a.agrigate.io/services/satellite/api/fields'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = { /* Your payload */ }\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(c.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://a.agrigate.io/services/satellite/api/fields'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\npayload = {...}  # Payload\n\nresponse = requests.post(endpoint, headers=headers, json=payload)\nprint(response.json())\n"))),Object(i.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ your payload }' \\\n    'https://a.agrigate.io/services/satellite/api/fields'\n")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"put-fieldsid"},Object(i.b)("inlineCode",{parentName:"h3"},"PUT /fields/{id}")),Object(i.b)("p",null,"Endpoint used to update the geometry of the field."),Object(i.b)("p",null,"You cannot update the external id. The payload is a single JSON object with an\nentry ",Object(i.b)("inlineCode",{parentName:"p"},"geometry")," which contains a MultiPolygon GeoJSON object. Again, the new\ngeometry must respect the area and perimeter limits of ",Object(i.b)("inlineCode",{parentName:"p"},"POST /fields"),"."),Object(i.b)(l.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Bash",value:"sh"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nlet endpoint = 'https://a.agrigate.io/services/satellite/api/fields'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = { /* Your geometry */ }\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(c.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://a.agrigate.io/services/satellite/api/fields'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\npayload = {...}  # Geometry\n\nresponse = requests.post(endpoint, headers=headers, json=payload)\nprint(response.json())\n"))),Object(i.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ your geometry }' \\\n    'https://a.agrigate.io/services/satellite/api/fields'\n")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"delete-fieldsid"},Object(i.b)("inlineCode",{parentName:"h3"},"DELETE /fields/{id}")),Object(i.b)("p",null,"Deletes the field from our database."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Be careful when using this method. It will delete all the processed images from\nthe database as well."))),Object(i.b)(l.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Bash",value:"sh"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\n\nconst TOKEN = 'YOUR_TOKEN'\n\nconst client = axios.create({\n  baseURL: 'https://a.agrigate.io',\n  headers: {'Authorization': `Bearer ${TOKEN}`}\n})\n\nclient.delete('/fields/YOUR_ID')\n  .then(res => console.log(res.statusCode))\n  .catch(console.error)\n"))),Object(i.b)(c.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://a.agrigate.io/services/satellite/api/fields/YOUR_ID'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.delete(endpoint, headers=headers)\nprint(response)\n"))),Object(i.b)(c.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -X DELETE \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://a.agrigate.io/services/satellite/api/fields/YOUR_ID'\n")))))}O.isMDXComponent=!0},167:function(e,t,a){"use strict";var n=a(0),r=a(53);t.a=function(){return Object(n.useContext)(r.a)}},168:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)&&n.length){var l=r.apply(null,n);l&&e.push(l)}else if("object"===i)for(var c in n)a.call(n,c)&&n[c]&&e.push(c)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},169:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),p=s(a),O=n,u=p["".concat(l,".").concat(O)]||p[O]||d[O]||i;return a?r.a.createElement(u,c(c({ref:t},o),{},{components:a})):r.a.createElement(u,c({ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=O;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var o=2;o<i;o++)l[o]=a[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},171:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));a(172);var n=a(167);function r(e){var t=(Object(n.a)().siteConfig||{}).baseUrl,a=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?a+e.slice(1):a+e}},172:function(e,t,a){"use strict";var n=a(17),r=a(35),i=a(173),l="".startsWith;n(n.P+n.F*a(174)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),a=r(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return l?l.call(t,n,a):t.slice(a,a+n.length)===n}})},173:function(e,t,a){var n=a(71),r=a(25);e.exports=function(e,t,a){if(n(t))throw TypeError("String#"+a+" doesn't accept regex!");return String(r(e))}},174:function(e,t,a){var n=a(3)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(a){try{return t[n]=!1,!"/./"[e](t)}catch(r){}}return!0}},175:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)({tabGroupChoices:{},setTabGroupChoices:function(){}});t.a=r},180:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},184:function(e,t,a){"use strict";a(23),a(19),a(18);var n=a(0),r=a.n(n),i=a(175);var l=function(){return Object(n.useContext)(i.a)},c=a(168),b=a.n(c),o=a(126),s=a.n(o),p=37,d=39;t.a=function(e){var t=e.block,a=e.children,i=e.defaultValue,c=e.values,o=e.groupId,O=l(),u=O.tabGroupChoices,j=O.setTabGroupChoices,m=Object(n.useState)(i),f=m[0],h=m[1];if(null!=o){var g=u[o];null!=g&&g!==f&&h(g)}var N=function(e){h(e),null!=o&&j(o,e)},y=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:b()("tabs",{"tabs--block":t})},c.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":f===t,className:b()("tabs__item",s.a.tabItem,{"tabs__item--active":f===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){return function(e,t,a){switch(a.keyCode){case d:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case p:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return N(t)},onClick:function(){return N(t)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===f}))[0]))}}}]);