/*! For license information please see c4837f16.64a1e2ce.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{156:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return u})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(9),o=(a(0),a(169)),l=a(186),s=a(185),i=(a(171),{title:"Converters Service"}),c={id:"converter",title:"Converters Service",description:"File Conversion",source:"@site/docs/converter.md",permalink:"/docs/docs/converter",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/converter.md",sidebar:"docs",previous:{title:"Operations Service",permalink:"/docs/docs/operations"}},u=[{value:"File Conversion",id:"file-conversion",children:[{value:"Shapefile -&gt; ISOXML",id:"shapefile---isoxml",children:[]},{value:"CNHI -&gt; GeoJSON",id:"cnhi---geojson",children:[]},{value:"Trimble -&gt; GeoJSON",id:"trimble---geojson",children:[]},{value:"Shapefile -&gt; GeoJSON",id:"shapefile---geojson",children:[]},{value:"GeoJSON -&gt; Shapefile",id:"geojson---shapefile",children:[]}]}],p={rightToc:u};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"file-conversion"},"File Conversion"),Object(o.b)("p",null,"If you want to allow users to upload machine files directly to your dashboard\nor to convert recommendations to a machine-readable format or have another use\nthat requires file conversion, these converters will help."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Roadmap")),Object(o.b)("p",null,"Today, you have the option to use these converters:  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"#shapefile-gt-isoxml"}),"Shapefile -> ISOXML")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"#cnhi-gt-geojson"}),"CNHI -> GeoJSON")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"#trimble-gt-geojson"}),"Trimble -> GeoJSON")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"#shapefile-gt-geojson"}),"Shapefile -> GeoJSON")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"#geojson-gt-shapefile"}),"GeoJSON -> Shapefile"))),Object(o.b)("h3",{id:"shapefile---isoxml"},"Shapefile -> ISOXML"),Object(o.b)("p",null,"Send this along with your zipped shapefile"),Object(o.b)(l.a,{defaultValue:"js",values:[{label:"Python",value:"py"},{label:"Bash",value:"sh"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests as req\n\nurl = 'https://a.agrigate.io/quickstart/api/files/shapefile/isoxml'\nheaders = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n}\nfiles = {'file': open('PATH/YOUR_FILE_NAME.zip','rb')}\n\nr = req.post(url, headers=headers, files=files)\nprint(r.text)\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl \\\n-F 'file=@PATH/YOUR_FILE_NAME.zip' \\\n-H 'Authorization: Bearer YOUR_TOKEN' \\\n'https://a.agrigate.io/quickstart/api/files/shapefile/isoxml'\n"))),Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript--nodejs"}),"var request = require('request');\n\nvar headers = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n};\n\nvar options = {\n    url: 'https://a.agrigate.io/quickstart/api/files/shapefile/isoxml',\n    method: 'POST',\n    headers: headers\n};\n\nfunction callback(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        console.log(body);\n    }\n}\n\nrequest(options, callback);\n")))),Object(o.b)("p",null,"Returns status 200 and a TEXT link where you can download your converted file from"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "uri": "https://leaf-isoxml.s3-us-west-2.amazonaws.com/output/3e1291e4-3026-4357-8bff-0e24feb79602.xml"\n}\n')),Object(o.b)("p",null,"This endpoint will convert a shapefile to ISOXML to be read by a wide variety of machines.\nThis is commonly used for converting VRT prescription files to a machine readable format."),Object(o.b)("p",null,"Note that the return is plain text, not json."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"cnhi---geojson"},"CNHI -> GeoJSON"),Object(o.b)("p",null,"Send this along with your zipped file"),Object(o.b)(l.a,{defaultValue:"js",values:[{label:"Python",value:"py"},{label:"Bash",value:"sh"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests as req\n\nurl = 'https://a.agrigate.io/quickstart/api/files/cnhi'\nheaders = {\n'Authorization': 'Bearer YOUR_TOKEN'\n}\nfiles = {'file': open('PATH/YOUR_FILE_NAME.cn1.zip','rb')}\n\nr = req.post(url, headers=headers, files=files)\nprint(r.text)\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl \\\n-F 'file=@PATH/YOUR_FILE_NAME.cn1.zip' \\\n-H 'Authorization: Bearer YOUR_TOKEN' \\\n'https://a.agrigate.io/quickstart/api/files/cnhi'\n"))),Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript--nodejs"}),"var request = require('request');\n\nvar headers = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n};\n\nvar options = {\n    url: 'https://a.agrigate.io/quickstart/api/files/cnhi',\n    method: 'POST',\n    headers: headers\n};\n\nfunction callback(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        console.log(body);\n    }\n}\n\nrequest(options, callback);\n")))),Object(o.b)("p",null,"Returns status 200 and a link where you can download your converted file from"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "uri": "https://cnhi-adapt-dev.s3-us-west-2.amazonaws.com/output/3190d2c5-1948-4621-92c5-6bb5c5d36ad1.json.gz"\n}\n')),Object(o.b)("p",null,"  This endpoint will convert a CNHi .CN1 file to Leaf's geojson data model.\nTo use, simply upload a zipped .CN1 folder."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"trimble---geojson"},"Trimble -> GeoJSON"),Object(o.b)("p",null,"Send this along with your zipped file"),Object(o.b)(l.a,{defaultValue:"js",values:[{label:"Python",value:"py"},{label:"Bash",value:"sh"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests as req\n\nurl = 'https://a.agrigate.io/quickstart/api/files/trimble'\nheaders = {\n'Authorization': 'Bearer YOUR_TOKEN'\n}\nfiles = {'file': open('PATH/YOUR_FILE_NAME.cn1.zip','rb')}\n\nr = req.post(url, headers=headers, files=files)\nprint(r.text)\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl \\\n-F 'file=@PATH/YOUR_FILE_NAME.zip' \\\n-H 'Authorization: Bearer YOUR_TOKEN' \\\n'https://a.agrigate.io/quickstart/api/files/trimble'\n"))),Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript--nodejs"}),"var request = require('request');\n\nvar headers = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n};\n\nvar options = {\n    url: 'https://a.agrigate.io/quickstart/api/files/trimble',\n    method: 'POST',\n    headers: headers\n};\n\nfunction callback(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        console.log(body);\n    }\n}\n\nrequest(options, callback);\n")))),Object(o.b)("p",null,"Returns status 200 and a link where you can download your converted file from"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "uri": "https://trimble-adapt-dev.s3-us-west-2.amazonaws.com/output/7fc72a96-86f6-4568-b730-a581f883509a.json.gz"\n}\n')),Object(o.b)("p",null,"This endpoint will convert a Trimble file to Leaf's geojson data model.\nTo use, simply upload a zipped Trimble folder."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"shapefile---geojson"},"Shapefile -> GeoJSON"),Object(o.b)("p",null,"Send this along with your zipped file"),Object(o.b)(l.a,{defaultValue:"js",values:[{label:"Python",value:"py"},{label:"Bash",value:"sh"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests as req\n\nurl = 'https://a.agrigate.io/quickstart/api/converters/shapefile/geojson'\nheaders = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n}\nfiles = {'file': open('PATH/YOUR_FILE_NAME.zip','rb')}\n\nr = req.post(url, headers=headers, files=files)\nprint(r.text)\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl \\\n-F 'file=@PATH/YOUR_FILE_NAME.zip' \\\n-H 'Authorization: Bearer YOUR_TOKEN' \\\n'https://a.agrigate.io/quickstart/api/converters/shapefile/geojson'\n"))),Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript--nodejs"}),"var request = require('request');\n\nvar headers = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n};\n\nvar options = {\n    url: 'https://a.agrigate.io/quickstart/api/converters/shapefile/geojson',\n    method: 'POST',\n    headers: headers\n};\n\nfunction callback(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        console.log(body);\n    }\n}\n\nrequest(options, callback);\n")))),Object(o.b)("p",null,"Returns status 200 and a TEXT link where you can download your converted (json) file from"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "uri":\n"https://converter-prod-conversionsbucket-somerandomstring.s3-us-west-2.amazonaws.com/somerandomstring.json"\n}\n')),Object(o.b)("p",null,"The input file must be a zip file.\nThat is done because shapefile is a multi file standard.\nIt is usually a set of 4 files: .dbf, .prj, .shp and .shx."),Object(o.b)("p",null,"The output file will be a GeoJSON file."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"geojson---shapefile"},"GeoJSON -> Shapefile"),Object(o.b)("p",null,"Send this along with your (Geo)JSON"),Object(o.b)(l.a,{defaultValue:"js",values:[{label:"Python",value:"py"},{label:"Bash",value:"sh"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests as req\n\nurl = 'https://a.agrigate.io/quickstart/api/converters/geojson/shapefile/'\nheaders = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n}\nfiles = {'file': open('PATH/YOUR_FILE_NAME.json','rb')}\n\nr = req.post(url, headers=headers, files=files)\nprint(r.text)\n"))),Object(o.b)(s.a,{value:"sh",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl \\\n-F 'file=@PATH/YOUR_FILE_NAME.json' \\\n-H 'Authorization: Bearer YOUR_TOKEN' \\\n'https://a.agrigate.io/quickstart/api/converters/geojson/shapefile/'\n"))),Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript--nodejs"}),"var request = require('request');\n\nvar headers = {\n    'Authorization': 'Bearer YOUR_TOKEN'\n};\n\nvar options = {\n    url: 'https://a.agrigate.io/quickstart/api/converters/geojson/shapefile/',\n    method: 'POST',\n    headers: headers\n};\n\nfunction callback(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        console.log(body);\n    }\n}\n\nrequest(options, callback);\n")))),Object(o.b)("p",null,"Returns status 200 and a TEXT link where you can download your converted file from"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "uri":\n"https://converter-prod-conversionsbucket-somerandomstring.s3-us-west-2.amazonaws.com/somerandomstring.zip"\n}\n')),Object(o.b)("p",null,"The input file must be a .json GeoJSON file"),Object(o.b)("p",null,"The output file will be a zipped file."),Object(o.b)("hr",null))}b.isMDXComponent=!0},167:function(e,t,a){"use strict";var n=a(0),r=a(54);t.a=function(){return Object(n.useContext)(r.a)}},168:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var o=typeof n;if("string"===o||"number"===o)e.push(n);else if(Array.isArray(n)&&n.length){var l=r.apply(null,n);l&&e.push(l)}else if("object"===o)for(var s in n)a.call(n,s)&&n[s]&&e.push(s)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},169:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,h=p["".concat(l,".").concat(d)]||p[d]||b[d]||o;return a?r.a.createElement(h,s(s({ref:t},c),{},{components:a})):r.a.createElement(h,s({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var c=2;c<o;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},171:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));a(174);var n=a(167);function r(e){var t=(Object(n.a)().siteConfig||{}).baseUrl,a=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?a+e.slice(1):a+e}},174:function(e,t,a){"use strict";var n=a(17),r=a(35),o=a(176),l="".startsWith;n(n.P+n.F*a(177)("startsWith"),"String",{startsWith:function(e){var t=o(this,e,"startsWith"),a=r(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return l?l.call(t,n,a):t.slice(a,a+n.length)===n}})},176:function(e,t,a){var n=a(72),r=a(25);e.exports=function(e,t,a){if(n(t))throw TypeError("String#"+a+" doesn't accept regex!");return String(r(e))}},177:function(e,t,a){var n=a(3)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(a){try{return t[n]=!1,!"/./"[e](t)}catch(r){}}return!0}},178:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)({tabGroupChoices:{},setTabGroupChoices:function(){}});t.a=r},185:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},186:function(e,t,a){"use strict";a(23),a(19),a(18);var n=a(0),r=a.n(n),o=a(178);var l=function(){return Object(n.useContext)(o.a)},s=a(168),i=a.n(s),c=a(127),u=a.n(c),p=37,b=39;t.a=function(e){var t=e.block,a=e.children,o=e.defaultValue,s=e.values,c=e.groupId,d=l(),h=d.tabGroupChoices,f=d.setTabGroupChoices,O=Object(n.useState)(o),j=O[0],m=O[1];if(null!=c){var v=h[c];null!=v&&v!==j&&m(v)}var g=function(e){m(e),null!=c&&f(c,e)},y=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:i()("tabs",{"tabs--block":t})},s.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":j===t,className:i()("tabs__item",u.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){return function(e,t,a){switch(a.keyCode){case b:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case p:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return g(t)},onClick:function(){return g(t)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===j}))[0]))}}}]);